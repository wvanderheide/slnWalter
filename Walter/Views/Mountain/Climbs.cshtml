@using Walter.ViewModels;
@model List<VmClimbYear>
@{
    ViewBag.Title = "Years";
    int lagYear = 0;
    string jumpTo = string.Empty;
    int climbsPerYear = 0;
    int totalClimbs = 0;
}

<div class="container">
    <br />
    <div class="well well-sm">
        <h2>
            <span class="glyphicon glyphicon-picture fa-lg" id="totalClimbs"></span> Climbs
        </h2>
        Below is a list of mountain climbs I have done arranged by date.
    </div>

    <span style="color:red; font-weight: bold">TO DO: </span>
    <ul>
        <li>Add ability to see Mountain climbed with in a certain time frame (ie 40 at 40)</li>
        <li>Need to add a Rock Climb log page</li>
    </ul>
    <br />
    <div id="jumpTo"></div>
    @foreach (var y in Model)
    {
        if (lagYear != y.Year)
        {
            lagYear = y.Year;
            jumpTo += y.Year + ",";
            climbsPerYear = y.Col1.Count + y.Col2.Count + y.Col3.Count + y.Col4.Count;
            @YearHeader(y.Year, climbsPerYear)
            totalClimbs = totalClimbs + climbsPerYear;
        }
        <div class="row">
            <div class="col-sm-3">
                <ul>
                    @ListItems(y.Col1)
                </ul>
            </div>
            <div class="col-sm-3">
                <ul>
                    @ListItems(y.Col2)
                </ul>
            </div>
            <div class="col-sm-3">
                <ul>
                    @ListItems(y.Col3)
                </ul>
            </div>
            <div class="col-sm-3">
                <ul>
                    @ListItems(y.Col4)
                </ul>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12" style="text-align: right"><span class="badge">@climbsPerYear</span></div>
        </div>
    }
    @{
        int length = jumpTo.Length - 1;
        jumpTo = jumpTo.Substring(0, length);
        jumpTo = "[" + jumpTo + "];";
    }
    <br />
    <br />
    Total climbs: <span class="badge">@totalClimbs</span>
</div>

<script>
    $(document).ready(function() {
        var jumpTo = @jumpTo;
        var jumpToMenu = "";
        var lastIndex = jumpTo.length - 1;
        var lagYear = "";
        $.each(jumpTo, function(index, value) {
            jumpToMenu += "<a href='#Year" + lagYear + "'>" + value + "</a>";
            lagYear = value;
            if (index < lastIndex) {
                jumpToMenu += " | ";
            }
        });

        $('#jumpTo').html("Jump to: " + jumpToMenu);
        $('#totalClimbs').attr('title', 'Climbs Total: @totalClimbs');
    });
</script>

@* -----------------------------------------------------------------------------
       Helper Methods
    ------------------------------------------------------------------------------- *@
@helper YearHeader(int year, int count)
{
    <br />
    <div class="row">
        <a id="Year@(year)"></a>
        <div class="col-sm-12" style="background-color:#eee; color:black; font-weight:bold;" title="Total climbs for @year = @count">@year</div>
    </div>
}

@helper ListItems(List<VmClimb> col)
{
    foreach (var item in col)
    {

        <li>
            @if (!string.IsNullOrEmpty(item.SummitNote))
            {
                @item.Name@:, @item.State <span class="small" title="@(item.SummitNote)" style="cursor:pointer">(@string.Format("{0:M/d}", item.SummitDate))</span><sup style="cursor:pointer" title="@(item.SummitNote)">*</sup>
            }
            else
            {
                @item.Name@:, @item.State <span class="small">(@string.Format("{0:M/d}", item.SummitDate))</span>
            }
        </li>
    }
}